Code review

HW13
#1
обычно в разных скриптах инициализация и популирование БД
SqlStorageTest должен наследоваться от AbstractStorageTest, и должен быть
конструктор без параметров, в котором будет вызов super с нужными параметрами +++
fillTestData можно в утилиты вынести в отд класс +++

tanya [11:44 PM]
- BlockOfCode и SqlHelper перенеси в папку sql +++

*SqlStorage*
- не надо SqlHelper инициализировать null, геттер/сеттер лишнее +++
- mapResultSetToList, не надо в отд метод, тут всего 3 строки +++
- должно быть один метод == один запрос к БД +++
поправь методы с учетом нижеизложенного +++
есть три основных метода выполнения PreparedStatement
-- executeQuery()
-- executeUpdate()
-- execute()
для методов с SELECT - нужен  executeQuery(), т. к. нужно получить
объект/объекты
для clear достаточно execute() +++ т.к. нам без разницы сколько удалилось
записей
а вот для остальных нужен executeUpdate т.к. вернется кол-во строк на
которые повлиял sql-запрос
не все исключения одинаково полезны,
PSQLException не обязательно означает - ExistStorageException +++

#2
оставляй просто new ExistStorageException("") +++
*SqlHelper*
- если ловим любое другое SQLException то прокидывай StorageException,
вместо e.printStackTrace() +++

*SqlStorage*
- clear, см упрощенный вариант sqlHelper.execute +++
- save, нет необходимости в executeUpdate и проверки кол-ва строк +++
- сделай как-то однообразно, например в апдейт проверка и на 0 и на !=1,
а в остальных метода по-другому +++
- isResumeExist - лишнее +++