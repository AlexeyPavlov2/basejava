Code review

#1
оба решения хотелось бы в один стрим

*minValue*
- не объявляй переменные через запятую, так можно, но нечитабельно
- см. IntStream
- подумай как преобразовать массив чисел в число в цикле, только без степени,
и как тут применить reduce

*oddOrEven*
- в целом решение хорошее, но подумай как сделать в один стрим, см
https://www.javacodegeeks.com/2015/11/java-8-streams-api-grouping-partitioning-stream.html (edited)

Решение от Татьяны
у меня такой вариант
1)

AtomicInteger sum = new AtomicInteger();
return integers.stream()
                .collect(Collectors.partitioningBy(i -> {
                    sum.addAndGet(i);
                    return i % 2 == 0;
                }))
                .get(sum.get() % 2 != 0);

2) в одну строку
```return integers.stream()
                .collect(Collectors.partitioningBy(i -> i % 2 == 0))
                .get(integers.stream().mapToInt(Integer::intValue).sum() % 2 != 0);